<?xml version="1.0" encoding="UTF-8"?>
<project name="Spiffy UI Framework Sample Project" default="all" basedir=".">

    <target name="all" depends="setup" description="Build, compile, and package the entire application">
        <!-- Call the Spiffy UI build -->
        <ant antfile="${build.base}/external/spiffyui/build/build.xml" 
             dir="${build.base}/external/spiffyui">
            <property name="spiffy.www" value="${sample.out.www}"/>
            <property name="spiffy.classes" value="${sample.out.classes}"/>
        </ant>
        
        <antcall target="addVersionInfo"/>
        
        <antcall target="HTMLProps"/>
             
        <antcall target="gwt-compile">
            <param name="gwttarget" value="org.spiffyui.spsample.index"/>
        </antcall>
        
        <antcall target="compile"/>
        
        <antcall target="javadoc"/>
        
        <antcall target="package" />
    </target>
    
    <target name="setup" description="Setup build dependencies and properties and get Subversion information">
        <property environment="env"/>

        <!-- These are all the project relative paths.  Please add new paths
             here so they are easier to find when they change. -->
        <condition property="build.base" value="${env.SPSAMPLE_BASE}" else="${basedir}">
          <isset property="${env.env.SPSAMPLE_BASE}"/>
        </condition>
        <property name="root" location="${build.base}"/>
        <property name="spiffyui" location="${root}/external/spiffyui"/>
        <property name="build" location="${build.base}/build"/>
        <property name="sample.src" location="${root}/src/main/java"/>
        <property name="sample.web.src" location="${root}/src/main/webapp"/>
        <property name="sample.out" location="${root}/target"/>
        <property name="sample.dist" location="${sample.out}/dist"/>
        <property name="sample.out.www" location="${sample.out}/www"/>
        <property name="sample.out.classes" location="${sample.out}/classes"/>


        <property name="tomcat.home"  location="${build.base}/../rpt/external/tomcat"/>
        
        <tstamp>
            <format property="builddate" pattern="MMM d, yyyy h:mm:ss a"/>
        </tstamp>

        <!-- Not using svn for the moment
        <exec executable="svn" output="build_svninfo.xml">
            <arg line="info - -xml ${root}"/>
        </exec>
        -->

        <!-- We also store the current revision from Subversion
        <xmlproperty file="build_svninfo.xml"/>
        <delete file="build_svninfo.xml"/>
        <property name="revision.number" value="${info.entry(revision)}"/>
        -->
        <property name="revision.number" value="241"/>
        
        <mkdir dir="${sample.out}"/>
        <mkdir dir="${sample.out.classes}"/>
        <mkdir dir="${sample.out.www}"/>
        <mkdir dir="${sample.dist}"/>
    </target>
    
    <target name="HTMLProps" depends="setup" description="Combine the HTML files in this project into a GWT message bundle">
        <taskdef name="htmlprops" classname="org.spiffyui.build.HTMLPropertiesTask">
            <classpath>
                <pathelement location="${spiffyui}/build/lib/closuretask.jar"/>
            </classpath>
        </taskdef>
        
        <mkdir dir="${sample.out.classes}/org/spiffyui/spsample/client"/>
        
        <htmlprops properties="${sample.out.classes}/org/spiffyui/spsample/client/SPSampleStrings.properties">
            <fileset dir="${sample.src}/org/spiffyui/spsample/client" includes="**/*.html" />
        </htmlprops>
        
    </target>
    
    <!-- This target calls the GWT compiler inline and
         moves the files around so we get the compiled
         GWT without the directory with the package name -->
    <target name="gwt-compile" description="Call the GWT compiler for this project">
        <java classname="com.google.gwt.dev.Compiler"
            fork="true" failonerror="true" maxmemory="256m">
            <arg value="-style"/>
            <arg value="PRETTY"/>
            <arg value="-war"/>
            <arg value="${sample.out.www}"/>
            <arg value="${gwttarget}"/>
            <classpath>
                <pathelement location="${sample.src}"/>
                <pathelement location="${spiffyui}/src/main/java"/>
                <pathelement location="${sample.out.classes}"/>
                <fileset dir="${build}/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement path="${java.class.path}"/>
            </classpath>
        </java>
        
        <!-- GWT compiles files into a directory with the same
             name as the package.  We want to strip that off. 
             If we add more GWT modules to the project we'll 
             need to skip this step for them. -->
        <move todir="${sample.out.www}" failonerror="false">
            <fileset dir="${sample.out.www}/org.spiffyui.spsample.index" includes="**/*" />
        </move>
        
        <delete dir="${sample.out.www}/org.spiffyui.spsample.index" />
        
    </target>
    
    <target name="addVersionInfo" description="Generate the buildnum.properties file with build information">
        <mkdir dir="${sample.out.classes}/org/spiffyui/spsample/server"/>

        <echo file="${sample.out.classes}/org/spiffyui/spsample/server/buildnum.properties">
build.date=${builddate}
build.user=${user.name}
build.version=0.6
build.revision=${revision.number} 
build.dir=${root}
        </echo>
    </target>
    
    <target name="compile" description="Call the Java compiler for this project">
        <!-- Compile all the Java -->
        <javac srcdir="${sample.src}/org/spiffyui/spsample/server" destdir="${sample.out.classes}" 
               target="1.5" source="1.5" debug="true" deprecation="yes"
               includeantruntime="false">
            <compilerarg value="-Xlint" />
            <classpath>
                <fileset dir="${root}/build/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="${spiffyui}/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement path="${java.class.path}"/>
            </classpath>
        </javac>
    </target>
    
    <target name="package" description="Package the contents of this project into spsample.war">
        <!-- Create the distribution directory -->
        <delete file="${sample.dist}/spsample.war" />
        <war destfile="${sample.dist}/spsample.war" webxml="${sample.web.src}/WEB-INF/web.xml">
            <fileset dir="${sample.out.www}"/>
            <zipfileset dir="${root}/js" prefix="js" >
                <include name="**/*.js"/>
            </zipfileset>
            <zipfileset dir="${sample.out.classes}" prefix="WEB-INF/classes" >
                <include name="**/*"/>
            </zipfileset>
            
            <!-- We need to add the JARs to support the spiffy framework to
                 our WAR file -->
            <zipfileset dir="${spiffyui}/lib" prefix="WEB-INF/lib" >
                <include name="**/*.jar"/>
            </zipfileset>     
        </war>
    </target>
    
    <target name="javadoc" description="Generate JavaDoc for this project">
        <mkdir dir="${sample.out.www}/javadoc"/>
        
        <javadoc destdir="${sample.out.www}/javadoc"
                 author="false"
                 version="true"
                 use="true"
                 windowtitle="Spiffy UI Framework API">
            <packageset dir="${spiffyui}/src/main/java" defaultexcludes="yes">
                <include name="org/spiffyui/**"/>
            </packageset>
        </javadoc>
    </target>

    <target name="tomcat.setup" depends="setup,tomcat.deploycheck">
        <fail message="The spsample.war file is missing.  You must build before you can deploy.">
            <condition>
                <not>
                    <available file="${sample.dist}/spsample.war"/>
                </not>
            </condition>
        </fail>

        <echo message="catalina-ant.jar: ${tomcat.home}/lib/catalina-ant.jar" />
        <property file="${build}/tomcat.properties"/>
        <taskdef file="${build}/tomcatTasks.properties">
            <classpath>
                <pathelement path="${tomcat.home}/lib/catalina-ant.jar"/>
            </classpath>
        </taskdef>
    </target>

    <target name="tomcat.deploycheck">
        <condition property="spsample.is.deployed">
            <available file="${tomcat.home}/webapps/spsample.war"/>
        </condition>
    </target>

    <target name="tomcat.undeploy" if="spsample.is.deployed">
        <undeploy url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="/spsample"/>
    </target>

    <target name="deploy" depends="tomcat.setup,tomcat.undeploy" description="Deploy this project to the Tomcat server specified at tomcat.home">
        <deploy url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="/spsample"
            war="file:${sample.dist}/spsample.war"/>
    </target>
    
    <target name="clean" depends="setup" description="Remove the artifacts generated by this build">
        <!-- Call the Spiffy UI build -->
        <ant antfile="${spiffyui}/build/build.xml" 
             dir="${spiffyui}"
             target="spiffy.clean">
            <property name="spiffy.www" value="${sample.out.www}"/>
            <property name="spiffy.classes" value="${sample.out.classes}"/>
        </ant>
        
        <delete dir="${sample.dist}"/>
        <delete dir="${sample.out}"/>
    </target>
</project>
